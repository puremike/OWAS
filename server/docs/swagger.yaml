basePath: /api/v1
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  github_com_puremike_online_auction_api_internal_models.CreateUserRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      full_name:
        maxLength: 32
        minLength: 6
        type: string
      location:
        maxLength: 42
        minLength: 6
        type: string
      password:
        type: string
      username:
        maxLength: 32
        minLength: 4
        type: string
    required:
    - confirm_password
    - email
    - full_name
    - location
    - password
    - username
    type: object
  github_com_puremike_online_auction_api_internal_models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_puremike_online_auction_api_internal_models.PasswordUpdateRequest:
    properties:
      confirm_password:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    required:
    - confirm_password
    - new_password
    - old_password
    type: object
  github_com_puremike_online_auction_api_internal_models.UserProfileUpdateRequest:
    properties:
      email:
        type: string
      full_name:
        maxLength: 32
        minLength: 6
        type: string
      location:
        maxLength: 42
        minLength: 6
        type: string
      username:
        maxLength: 32
        minLength: 4
        type: string
    required:
    - email
    - full_name
    - location
    - username
    type: object
  github_com_puremike_online_auction_api_internal_models.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      location:
        type: string
      username:
        type: string
    type: object
  internal_handlers.healthResponse:
    properties:
      api_version:
        type: string
      environment:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact:
    email: digitalmarketfy@gmail.com
    name: Puremike
    url: http://github.com/puremike
  description: This is an API for a Online Webbased Auction System
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Online Webbased Auction System API
  version: 1.0.0
paths:
  /{username}:
    get:
      consumes:
      - application/json
      description: |-
        Retrieves the profile of the user associated with the access token.
        Access token must be provided as an `HttpOnly` cookie named `jwt`.
      parameters:
      - description: Username of the user to retrieve profile for
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_puremike_online_auction_api_internal_models.UserResponse'
        "401":
          description: Unauthorized - invalid or expired token
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - jwtCookieAuth: []
      summary: Get User Profile
      tags:
      - Users
  /{username}/change-password:
    put:
      consumes:
      - application/json
      description: Allows an authenticated user to change their password.
      parameters:
      - description: Password update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_puremike_online_auction_api_internal_models.PasswordUpdateRequest'
      - description: Username of the user to change password for
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Password changed successfully
          schema:
            type: string
        "400":
          description: Bad Request - invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized - user not authenticated
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error - failed to change password
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - jwtCookieAuth: []
      summary: Change User Password
      tags:
      - Users
  /{username}/update-profile:
    put:
      consumes:
      - application/json
      description: Allows an authenticated user to update their profile details such
        as username, email, full name, and location.
      parameters:
      - description: Profile update payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_puremike_online_auction_api_internal_models.UserProfileUpdateRequest'
      - description: Username of the user to update profile for
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Profile updated successfully
          schema:
            type: string
        "400":
          description: Bad Request - invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized - user not authenticated
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error - failed to update profile
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - jwtCookieAuth: []
      summary: Update user profile
      tags:
      - Users
  /health:
    get:
      consumes:
      - application/json
      description: Returns the status of the application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.healthResponse'
      summary: Get health
      tags:
      - health
  /login:
    post:
      consumes:
      - application/json
      description: |-
        Authenticates a user using email and password.
        Upon successful authentication, a short-lived **JWT (access token)** is set as an `HttpOnly` cookie named `jwt`.
        A long-lived **refresh token** is also set as an `HttpOnly` cookie named `refresh_token`.
        Both cookies are crucial for maintaining user session and subsequent authenticated requests.
      parameters:
      - description: Login credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_puremike_online_auction_api_internal_models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'Two HttpOnly cookies are set: ''jwt'' (access token) and ''refresh_token''
            (refresh token).'
          schema:
            type: header
        "400":
          description: Bad Request - invalid input
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized - invalid credentials
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Login User
      tags:
      - Users
  /logout:
    post:
      description: Clears the user's authentication cookies, effectively logging them
        out.
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - jwtCookieAuth: []
      summary: Logout User
      tags:
      - Users
  /refresh:
    post:
      consumes:
      - application/json
      description: |-
        Refreshes the JWT access token using a valid refresh token.
        If the refresh token is valid, a new JWT is generated and set as an `HttpOnly` cookie.
        A valid refresh token must be provided as an `HttpOnly` cookie named `refresh_token`.
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized - Refresh token not found or invalid
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error - Failed to generate new token
          schema:
            $ref: '#/definitions/gin.H'
      summary: Refresh JWT Token
      tags:
      - Users
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_puremike_online_auction_api_internal_models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_puremike_online_auction_api_internal_models.UserResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: 'Use a valid JWT token. Format: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
  jwtCookieAuth:
    description: JWT (JSON Web Token) access token, sent as an HttpOnly cookie.
    in: cookie
    name: jwt
    type: apiKey
  refreshTokenCookie:
    description: Refresh token, sent as an HttpOnly cookie.
    in: cookie
    name: refresh_token
    type: apiKey
swagger: "2.0"
